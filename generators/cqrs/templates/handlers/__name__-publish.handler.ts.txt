import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';
import { PubSubService } from '@nestjs-toolkit/graphql';
import { <%= namePascal %>PublishCommand } from '../commands';
import { <%= nameUp %>_ON_CHANGES } from '../<%= namePlural %>.constants';

@CommandHandler(<%= namePascal %>PublishCommand)
export class <%= namePascal %>PublishHandler
  implements ICommandHandler<<%= namePascal %>PublishCommand> {
    
  constructor(private readonly pubSub: PubSubService) {}

  execute({ model, action }: <%= namePascal %>PublishCommand): Promise<any> {
    return this.pubSub.publish(<%= nameUp %>_ON_CHANGES, {
      _id: model._id,
      action,
      data: model.toJSON(),
    });
  }
}
