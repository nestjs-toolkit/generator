import {
  nestWinstonUtilities,
  OnModelChangedEvent,
} from '@nestjs-toolkit/winston-logger';
import { <%= namePascal %> } from '../schemas';
import { Request, User } from '../../../types';

export class <%= namePascal %>UpdatedEvent implements OnModelChangedEvent {
  readonly collection = '<%= namePlural %>';
  readonly action = '<%= name %>.updated';
  readonly tags = ['<%= namePlural %>'];

  constructor(
    public readonly model: <%= namePascal %>,
    public readonly old?: Partial<<%= namePascal %>>,
    public readonly req?: Request,
    public readonly user?: User,
  ) {
    if (!user && req) {
      this.user = req.user;
    }
  }

  get changes() {
    return nestWinstonUtilities.diff.updated(this.old, this.model.toJSON());
  }

  get detailedDiff() {
    return nestWinstonUtilities.diff.detailed(this.old, this.model.toJSON());
  }
}
