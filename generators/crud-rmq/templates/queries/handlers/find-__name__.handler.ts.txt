import { Logger } from '@nestjs/common';
import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';
import { <%= namePluralPascal %>Repository } from '../../<%= namePlural %>.repository';
import { <%= namePascal %> } from '../../schemas';
import { Find<%= namePascal %>Query } from '../impl';

@QueryHandler(Find<%= namePascal %>Query)
export class Find<%= namePascal %>Handler implements IQueryHandler<Find<%= namePascal %>Query> {
  private logger = new Logger(Find<%= namePascal %>Handler.name);

  constructor(private readonly repository: <%= namePluralPascal %>Repository) {}

  async execute({ id }: Find<%= namePascal %>Query): Promise<<%= namePascal %>> {
    this.logger.debug(`Find <%= namePascal %>: ${id}`);
    return this.repository.findOne(id);
  }
}
