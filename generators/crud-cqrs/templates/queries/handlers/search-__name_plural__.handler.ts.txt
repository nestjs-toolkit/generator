import { Logger } from '@nestjs/common';
import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';
import { EdgesResponse } from '@core/types';
import { <%= namePluralPascal %>Repository } from '../../<%= namePlural %>.repository';
import { <%= namePascal %> } from '../../schemas';
import { Search<%= namePluralPascal %>Query } from '../impl';

@QueryHandler(Search<%= namePluralPascal %>Query)
export class Search<%= namePluralPascal %>Handler implements IQueryHandler<Search<%= namePluralPascal %>Query> {
  private logger = new Logger(Search<%= namePluralPascal %>Handler.name);

  constructor(private readonly repository: <%= namePluralPascal %>Repository) {}

  async execute({ dto }: Search<%= namePluralPascal %>Query): Promise<EdgesResponse<<%= namePascal %>>> {
    this.logger.debug(dto);
    return this.repository.search(dto);
  }
}
